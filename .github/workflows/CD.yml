name: CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'corretto'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: make application.yml
        run: |
          cd ./Api-Module/src/main/resources
          touch ./application.yml
          echo "${{ secrets.APPLICATION }}" > ./application.yml
        shell: bash

      - name: make firebase.json
        uses: jsdaniell/create-json@v1.2.2
        with:
          path: ./Api-Module/src/main/resources
          json: ${{ secrets.FCM_JSON }}
          file: firebase.json

      - name: make promtail.yaml
        uses: appleboy/scp-action@master
        with:
            host: ${{ secrets.HOST }}
            username: ubuntu
            key: ${{ secrets.KEY }}
            source: "./.deploy/promtail.yaml"
            target: "/home/ubuntu"
            strip_components: 2

      - name: Set .env for configuration
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          script: |
            rm -rf ./.env
            touch ./.env
            echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> ./.env
            echo "DOCKER_REPOSITORY=${{ secrets.DOCKER_REPOSITORY }}" >> ./.env
            echo "DB_URL=${{ secrets.DEV_DB_URL }}" >> ./.env
            echo "DB_USERNAME=${{ secrets.DEV_DB_USERNAME }}" >> ./.env
            echo "DB_PASSWORD=${{ secrets.DEV_DB_PASSWORD }}" >> ./.env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> ./.env
            echo "KAKAO_APP_ID=${{ secrets.KAKAO_APP_ID }}" >> ./.env
            echo "APPLE_APP_ID=${{ secrets.APPLE_APP_ID }}" >> ./.env
            echo "S3_BUCKET=${{ secrets.S3_BUCKET }}" >> ./.env
            echo "AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}" >> ./.env
            echo "AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}" >> ./.env

      - name: Grant Execute Permission For Gradlew
        run: chmod +x gradlew

      - name: Build With Gradle
        run: |
          ./gradlew build
          ./gradlew generateRestDocs
          ./gradlew bootJar

      - name: Docker build
        run: docker build -f ./.deploy/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }} .

      - name: Docker Hub Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}

      - name: deploy-docker-compose push
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          source: "./.deploy/docker-compose.yml"
          target: "/home/ubuntu"
          strip_components: 2

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}
            docker stop ${{ secrets.DOCKER_REPOSITORY }}
            docker rm -f ${{ secrets.DOCKER_REPOSITORY }}
            docker-compose up -d
            docker image prune -f