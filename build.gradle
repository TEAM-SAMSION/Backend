plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.13'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

allprojects {
    group = 'com.pawith'
    version = '0.0.1'
    sourceCompatibility = '11'

    repositories {
        mavenCentral()
    }

}

springBoot {
    mainClass = 'com.pawith.apimodule'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'org.asciidoctor.jvm.convert'

    bootJar.enabled = false
    jar.enabled = true

    if (name == 'Api-Module') {
        bootJar.enabled = true
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
        asciidoctorExtensions
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-test'
        // jpa
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        runtimeOnly 'com.mysql:mysql-connector-j'

        // redis
//        implementation 'org.springframework.boot:spring-boot-starter-data-redis'

        // lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        // lombok test
        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        // restdocs
        asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
        implementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

        // Fixture testing tool
        testImplementation("com.navercorp.fixturemonkey:fixture-monkey-starter:0.6.3")
    }

    // RestDocs 설정
    ext {
        snippetsDir = file('build/generated-snippets')
    }

    test {
        useJUnitPlatform()
        outputs.dir snippetsDir
    }

    tasks.register("copySnippets", Copy) {
        if (name != 'Api-Module') {
            dependsOn test
            from snippetsDir
            into rootProject.file("Api-Module/build/generated-snippets")
        }
    }

    build {
        dependsOn copySnippets
    }

    if (project.name == 'Api-Module') {
        asciidoctor {
            configurations 'asciidoctorExtensions'
            inputs.dir snippetsDir
            baseDirFollowsSourceFile()
        }

        tasks.register("generateRestDocs", Copy) {
            dependsOn asciidoctor
            from file('build/docs/asciidoc')
            into file("src/main/resources/static/docs")
        }
    }
}
