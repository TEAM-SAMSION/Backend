plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.13'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

allprojects {
    group = 'com.petmory'
    version = '0.0.1'
    sourceCompatibility = '11'

    repositories {
        mavenCentral()
    }
}

springBoot {
    mainClass = 'com.petmory.apimodule'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'org.asciidoctor.jvm.convert'

    bootJar.enabled =false
    jar.enabled = true

    if(name == 'Api-Module'){
        bootJar.enabled=true
    }


    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-actuator'

        // jpa
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        runtimeOnly 'com.mysql:mysql-connector-j'


        // redis
//        implementation 'org.springframework.boot:spring-boot-starter-data-redis'


        // web
        implementation 'org.springframework.boot:spring-boot-starter-web'


        // lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'


        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        // restdocs
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    }


    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    ext {
        set('snippetsDir', file("build/generated-snippets"))
    }

    tasks.named('test') {
        outputs.dir snippetsDir
        useJUnitPlatform()
    }

    tasks.named('asciidoctor') {
        inputs.dir snippetsDir
        dependsOn test
    }
}
