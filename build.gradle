plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.13'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}



subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'org.asciidoctor.jvm.convert'

    group = 'com.petmory'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '11'

    bootJar.enabled =false;
    jar.enabled = true;

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        compileOnly 'org.projectlombok:lombok'
        runtimeOnly 'com.mysql:mysql-connector-j'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'io.projectreactor:reactor-test'
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    }


    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    ext {
        set('snippetsDir', file("build/generated-snippets"))
    }

    tasks.named('test') {
        outputs.dir snippetsDir
        useJUnitPlatform()
    }

    tasks.named('asciidoctor') {
        inputs.dir snippetsDir
        dependsOn test
    }
}
